{"version":3,"file":"messages.js","sources":["../src/messages.ts"],"sourcesContent":["import { CaptureDomPayload } from './types/global';\n\nexport type Msg =\n  | { type: 'CAPTURE_REQUEST'; url: string }\n  | { type: 'CAPTURE_DOM'; payload: CaptureDomPayload }\n  | { type: 'CAPTURE_RESULT'; ok: boolean; captureId?: string; error?: string }\n  | { type: 'TOGGLE_CAPTURE'; hostname: string; enabled: boolean }\n  | { type: 'GET_TOGGLE'; hostname: string }\n  | { type: 'GET_TOGGLE_RESPONSE'; hostname: string; enabled: boolean };\n\n// Helper functions for message handling\nexport function sendMessage<T extends Msg>(message: T): Promise<any> {\n  return new Promise((resolve, reject) => {\n    chrome.runtime.sendMessage(message, (response) => {\n      if (chrome.runtime.lastError) {\n        reject(new Error(chrome.runtime.lastError.message));\n      } else {\n        resolve(response);\n      }\n    });\n  });\n}\n\nexport function sendMessageToTab<T extends Msg>(tabId: number, message: T): Promise<any> {\n  return new Promise((resolve, reject) => {\n    chrome.tabs.sendMessage(tabId, message, (response) => {\n      if (chrome.runtime.lastError) {\n        reject(new Error(chrome.runtime.lastError.message));\n      } else {\n        resolve(response);\n      }\n    });\n  });\n}"],"names":[],"mappings":"AAWO,SAAS,YAA2B,SAA0B;AACnE,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAO,QAAQ,YAAY,SAAS,CAAC,aAAa;AAChD,UAAI,OAAO,QAAQ,WAAW;AAC5B,eAAO,IAAI,MAAM,OAAO,QAAQ,UAAU,OAAO,CAAC;AAAA,MACpD,OAAO;AACL,gBAAQ,QAAQ;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;AAEO,SAAS,iBAAgC,OAAe,SAA0B;AACvF,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAO,KAAK,YAAY,OAAO,SAAS,CAAC,aAAa;AACpD,UAAI,OAAO,QAAQ,WAAW;AAC5B,eAAO,IAAI,MAAM,OAAO,QAAQ,UAAU,OAAO,CAAC;AAAA,MACpD,OAAO;AACL,gBAAQ,QAAQ;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;"}